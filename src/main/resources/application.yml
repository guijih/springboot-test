server:
  port: 8888
  servlet:
    context-path: /
spring:
   datasource:
      url: jdbc:mysql://101.201.69.112:3306/springboot?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      username: root
      password: l!vWT#mL93
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 初始化时建立物理连接的个数
      druid.initial-size: 5
      # 最大连接池数量
      druid.max-active: 30
      # 最小连接池数量
      druid.min-idle: 5
      # 获取连接时最大等待时间，单位毫秒
      druid.max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      druid.time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      druid.min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      druid.validation-query: SELECT 1 FROM DUAL
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      druid.test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      druid.test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      druid.test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      druid.pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      druid.max-pool-prepared-statement-per-connection-size: 50
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      druid.filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      druid.connection-properties:
          druid.stat.mergeSql： true
          druid.stat.slowSqlMillis： 500
      # 合并多个DruidDataSource的监控数据
      druid.use-global-data-source-stat: true
      # druid连接池监控
      druid.stat-view-servlet.login-username: admin
      druid.stat-view-servlet.login-password: 123

# mybatis
mybatis:
  type-aliases-package: com.example.springboot.entity
  mapper-locations: classpath:com.example.springboot.mapper/*.xml
  configuration:
     map-underscore-to-camel-case: true



##redis配置
##Redis服务器地址
#  spring.redis.host=127.0.0.1
#  #Redis服务器连接端口
#  spring.redis.port=6379
#  #Redis数据库索引（默认为0）
#  spring.redis.database=0
#  #连接池最大连接数（使用负值表示没有限制）
#  spring.redis.jedis.pool.max-active=50
#  #连接池最大阻塞等待时间（使用负值表示没有限制）
#  spring.redis.jedis.pool.max-wait=3000
#  #连接池中的最大空闲连接
#  spring.redis.jedis.pool.max-idle=20
#  #连接池中的最小空闲连接
#  spring.redis.jedis.pool.min-idle=2



pring:
  # redis
  redis:
    host: 101.201.69.112
    port: 6379
    timeout: 3
    password: qwe123
    pool:
      min-idle: 1
      max-idle: 10
      max-wait: 3000
      max-active: 8








